{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/SideBar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontsize","style","padding","SidebarOptionChannel","h3","SideBar","useCollection","channels","SideBarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e1736d3.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCK4lj9K8_OYjzBkwWhToUrSLC0b4CpHtA\",\r\n    authDomain: \"slack-clone-4ad41.firebaseapp.com\",\r\n    projectId: \"slack-clone-4ad41\",\r\n    storageBucket: \"slack-clone-4ad41.appspot.com\",\r\n    messagingSenderId: \"562674350268\",\r\n    appId: \"1:562674350268:web:434644ad6e2c5d6b56f8b9\",\r\n    measurementId: \"G-GEPQ43LJRS\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth, provider, db};","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\"\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport {auth} from \"../firebase\"\r\n\r\nfunction Header() {\r\n    const [user] = useAuthState(auth);\r\n    return (\r\n        <HeaderContainer>\r\n            {/*Header left */}\r\n            <HeaderLeft>\r\n\r\n            <HeaderAvatar\r\n            onClick={() => auth.signOut()}\r\n            alt={user?.displayName}\r\n            src={user?.photoURL}\r\n            />\r\n            <AccessTimeIcon />\r\n            </HeaderLeft>\r\n            {/*Header search */}\r\n            <HeaderSearch>\r\n                <SearchIcon />\r\n                <input placeholder=\"Search\" />\r\n            </HeaderSearch>\r\n            {/*Header right */}\r\n            <HeaderRight>\r\n                <HelpOutlineIcon />\r\n\r\n            </HeaderRight>\r\n\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst HeaderSearch = styled.div`\r\nflex: 0.4;\r\nopacity: 1;\r\nborder-radius: 6px;\r\nbackground-color: #421f44;\r\ntext-align: center;\r\ndisplay:flex;\r\npadding: 0 50px;\r\ncolor: gray;\r\nborder: 1px gray solid;\r\n\r\n>input{\r\n    background-color: transparent;\r\n    border: none;\r\n    text-align: 30vw;\r\n    outline: 0;\r\n    color: white;\r\n}\r\n\r\n`;\r\n\r\nconst HeaderContainer = styled.div `\r\ndisplay: flex;\r\nposition: fixed; \r\nwidth: 100%;\r\nalign-items: center;\r\njustify-content: space-between;\r\npadding: 10px 0;\r\nbackground-color:var(--slack-color);\r\ncolor: white;\r\n`;\r\n\r\nconst HeaderLeft = styled.div `\r\nflex: 0.3;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-left: 20px;\r\n\r\n>.MuiSvgIcon-root{\r\n    margin-left: auto;\r\n    margin-right: 30px;\r\n}\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\nflex: 0.3;\r\ndisplay: flex;\r\nalign-items: flex-end;\r\n\r\n>.MuiSvgIcon-root{\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n}\r\n`;\r\n\r\nconst HeaderAvatar = styled(Avatar)`\r\ncursor: pointer;\r\n:hover {\r\n    opacity:0.8;\r\n}`;\r\n","import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState:{\r\n    roomId: null,\r\n  },\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n    \r\n  },\r\n   \r\n  \r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\n\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport styled from \"styled-components\";\r\nimport { enterRoom } from '../features/appSlice';\r\nimport {db} from \"../firebase\"\r\n\r\nfunction SidebarOption({Icon, title, addChannelOption, id}) {\r\n    \r\n const dispatch = useDispatch();\r\n    \r\n    const addChannel = () => {\r\n        const channelName = prompt(\"Please enter the channel name\");\r\n\r\n        if (channelName) {\r\n            db.collection(\"rooms\").add({\r\n                name: channelName,\r\n            })\r\n        }\r\n    };\r\n\r\n    const selectChannel = () => {\r\n        if(id){\r\n            dispatch(enterRoom({\r\n                roomId: id\r\n        }));\r\n        }\r\n    };\r\n    \r\n    \r\n    return (\r\n       <SidebarOptionContainer\r\n       \r\n       onClick={addChannelOption ? addChannel : selectChannel}\r\n\r\n       >\r\n           {Icon && <Icon fontsize=\"small\" style={{padding: 10}} />}\r\n\r\n            {Icon ? (\r\n                <h3>{title}</h3>\r\n            ): (\r\n                <SidebarOptionChannel>\r\n\r\n                    <span>#</span> {title}\r\n\r\n                </SidebarOptionChannel>\r\n            )}\r\n       </SidebarOptionContainer>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n\r\nconst SidebarOptionContainer = styled.div`\r\ndisplay: flex;\r\nfont-size: 12px;\r\nalign-items: center;\r\npadding-left: 2px;\r\ncursor: pointer;\r\n\r\n:hover {\r\n    opacity: 0.9;\r\n    background-color: #340e36;\r\n}\r\n\r\n> h3 {\r\n    font-weight: 500;\r\n}\r\n\r\n> h3 > span{\r\n    padding: 15px;   \r\n}\r\n\r\n`;\r\n\r\nconst SidebarOptionChannel = styled.h3`\r\npadding: 10px 0;\r\nfont-weight: 300;\r\n\r\n`;\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\r\nimport CreateIcon from \"@material-ui/icons/Create\"\r\nimport SidebarOption from './SidebarOption'\r\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\"\r\nimport InboxIcon from \"@material-ui/icons/Inbox\"\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\"\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\"\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\"\r\nimport AppsIcon from \"@material-ui/icons/Apps\"\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\n\r\nimport { auth, db } from '../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\n\r\n\r\nfunction SideBar() {\r\n    const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <SideBarContainer>\r\n            <SidebarHeader>\r\n                <SidebarInfo>\r\n                    <h2>Archis HQ</h2>\r\n                    <h3>\r\n                        <FiberManualRecordIcon />\r\n                        \r\n                    </h3>\r\n                </SidebarInfo>\r\n                <CreateIcon />\r\n            </SidebarHeader>\r\n\r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\r\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\r\n\r\n            <hr />\r\n\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n\r\n            <hr />\r\n\r\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n\r\n            {channels?.docs.map(doc => (\r\n                <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\r\n            ))}\r\n\r\n        </SideBarContainer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\nconst SideBarContainer = styled.div`\r\ncolor: white;\r\nbackground-color: var(--slack-color);\r\nflex:0.3;\r\nborder-top: 1px solid #49274b;\r\nmax-width: 260px;\r\nmargin-top: 60px;\r\n\r\n>hr{\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #49274b;\r\n}\r\n\r\n`;\r\n\r\nconst SidebarHeader = styled.div`\r\ndisplay: flex;\r\nborder-bottom: 1px solid #49274b;\r\npadding: 13px;\r\n\r\n>.MuiSvgIcon-root{\r\n    padding: 8px;\r\n    color: #49274b;\r\n    font-size: 18px;\r\n    background-color: white;\r\n    border-radius: 999px;\r\n\r\n}\r\n\r\n`;\r\n\r\nconst SidebarInfo = styled.div`\r\nflex: 1;\r\n\r\n>h2{\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n>h3{\r\n    display: flex;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    align-items: center;\r\n\r\n}\r\n\r\n>h3 >.MuiSvgIcon-root{\r\n    font-size: 14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n    color: green;\r\n}\r\n\r\n`;\r\n\r\n","import React , {useRef, useState} from 'react'\r\nimport styled from \"styled-components\";\r\nimport {Button} from \"@material-ui/core\"\r\nimport { auth, db } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction ChatInput({channelName, channelId, chatRef}) {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [user] = useAuthState(auth);\r\n\r\n    const sendMessage = e => {\r\n        e.preventDefault();\r\n\r\n        if(!channelId){\r\n            return false;\r\n        }\r\n\r\n        db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage:user.photoURL\r\n        })\r\n\r\n        chatRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n\r\n        <ChatInputContainer>\r\n            <form>\r\n                <input value={input} onChange={(e)=> setInput(e.target.value)} placeholder={`Message #${channelName}`} />\r\n\r\n                <Button hidden type='submit' onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n                \r\n                            </form>\r\n        </ChatInputContainer>\r\n            \r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst ChatInputContainer = styled.div`\r\nborder-radius: 20px;\r\n\r\n>form {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n}\r\n\r\n> form > input {\r\n    position: fixed;\r\n    bottom: 30px;\r\n    width: 60%;\r\n    border: 1px solid gray;\r\n    padding: 20px;\r\n    outline: none;\r\n}\r\n\r\n> form > button{\r\n    display: none !important;\r\n}\r\n\r\n`;","import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nfunction Message({message, timestamp, user, userImage}) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt=\"\" />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user}{''}\r\n                    <span>\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p>{message}</p>\r\n\r\n            </MessageInfo>\r\n\r\n        </MessageContainer>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\nconst MessageContainer = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\npadding:20px;\r\n\r\n>img{\r\n    height:50px;\r\n    border-radius:8px;\r\n}\r\n\r\n`;\r\n\r\nconst MessageInfo = styled.div`\r\npadding-left:10px;\r\n\r\n>h4> span{\r\n    color:gray;\r\n    font-weight:300;\r\n    margin-left:4px;\r\n    font-size:10px;\r\n}\r\n\r\n`;\r\n","import React, { useEffect, useRef } from 'react'\r\nimport styled from 'styled-components';\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\"\r\nimport { useSelector } from 'react-redux';\r\nimport { selectRoomId } from '../features/appSlice';\r\nimport ChatInput from \"../components/ChatInput\"\r\nimport {useCollection, useDocument} from \"react-firebase-hooks/firestore\";\r\nimport { db } from '../firebase';\r\nimport Message from \"../components/Message\"\r\n\r\nfunction Chat() {\r\n    const chatRef = useRef(null);\r\nconst roomId = useSelector(selectRoomId);\r\nconst [roomDetails] = useDocument(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n);\r\n\r\nconst [roomMessages,loading] = useCollection(\r\n    roomId && \r\n    db\r\n    .collection(\"rooms\")\r\n    .doc(roomId)\r\n    .collection(\"messages\")\r\n    .orderBy(\"timestamp\",\"asc\")\r\n)\r\n\r\nuseEffect(()=>{\r\n    chatRef?.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n    });\r\n\r\n}, [roomId,loading]) \r\n\r\n    return (\r\n        <ChatContainer>\r\n            {roomDetails && roomMessages && (\r\n\r\n<>\r\n            <Header>\r\n\r\n                <HeaderLeft>\r\n                    <h4><strong>#{roomDetails?.data().name}</strong></h4>\r\n                    <StarBorderOutlinedIcon />\r\n                </HeaderLeft>\r\n\r\n                <HeaderRight>\r\n                    <p>\r\n                        <InfoOutlinedIcon /> details\r\n                    </p>\r\n\r\n                </HeaderRight>\r\n            </Header>\r\n\r\n            <ChatMessages>\r\n\r\n                {roomMessages?.docs.map(doc=>{\r\n                    const {message, timestamp, user, userImage} = doc.data();\r\n\r\n                    return(\r\n                        <Message \r\n                        key={doc.id}\r\n                        message={message}\r\n                        timestamp={timestamp}\r\n                        user={user}\r\n                        userImage={userImage}\r\n                        \r\n                        />\r\n                    )\r\n                })}\r\n\r\n                <ChatBottom ref={chatRef} />\r\n\r\n            </ChatMessages>\r\n\r\n            <ChatInput \r\n            chatRef={chatRef}\r\n            channelName={roomDetails?.data().name}\r\n            channelId = {roomId}\r\n\r\n            />\r\n\r\n            </>\r\n            )}\r\n            \r\n        </ChatContainer>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\nconst ChatBottom = styled.div`\r\npadding-bottom: 200px;\r\n`;\r\n\r\nconst Header = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 20px;\r\nborder-bottom: 1px solid lightgray;\r\n\r\n`;\r\n\r\nconst ChatMessages = styled.div``;\r\n\r\nconst HeaderLeft = styled.div`\r\n\r\ndisplay: flex;\r\nalign-items:center;\r\n\r\n>h4{\r\n    display: flex;\r\n    text-transform: lowercase;\r\n    margin-right: 10px;\r\n}\r\n\r\n>h4>.MuiSvgIcon-root{\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n}\r\n`;\r\nconst HeaderRight = styled.div`\r\n\r\n>p{\r\n    display:flex;\r\n    align-items:center;\r\n    font-size:14px;\r\n}\r\n\r\n>p > .MuiSvgIcon-root{\r\n    margin-right:5px !important;\r\n    font-size: 16px;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst ChatContainer = styled.div`\r\nflex: 0.7;\r\nflex-grow: 1;\r\noverflow-y: scroll;\r\nmargin-top: 60px;\r\n\r\n`;\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport styled from \"styled-components\"\r\nimport { auth, provider } from '../firebase';\r\n\r\nfunction Login() {\r\nconst signIn = (e) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch((error) =>\r\n    alert(error.message));\r\n}\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <LoginInnerContainer>\r\n                <img src=\"https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png\"\r\n                alt= \"\" />\r\n\r\n                <h1>Sign in</h1>\r\n                <p></p>\r\n\r\n                <Button onClick={signIn}>Sign in with Google</Button>\r\n\r\n            </LoginInnerContainer>\r\n\r\n        </LoginContainer>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst LoginContainer = styled.div`\r\nbackground-color: #f8f8f8;\r\nheight: 100vh;\r\ndisplay: grid;\r\nplace-items: center;\r\n`;\r\nconst LoginInnerContainer = styled.div`\r\n\r\npadding: 100px;\r\ntext-align: center;\r\nbackground-color:white;\r\nborder-radius: 10px;\r\nbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n\r\n\r\n>img{\r\n    object-fit:contain;\r\n    height: 100px;\r\n    margin-bottom:40px;\r\n\r\n}\r\n\r\n>button{\r\n    margin-top: 50px;\r\n    text-transform: inherit !important;\r\n    background-color: #0a8d48 !important;\r\n    color: white;\r\n\r\n}\r\n`;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Header from \"./components/Header\"\r\nimport styled from \"styled-components\"\r\nimport SideBar from \"./components/SideBar.js\";\r\nimport Chat from \"./components/Chat\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport { auth } from './firebase';\r\nimport Login from \"./components/Login\"\r\nimport Spinner from \"react-spinkit\";\r\n\r\nfunction App() {\r\nconst [user, loading] = useAuthState(auth);\r\n\r\n\r\nif(loading){\r\n  return(\r\n    <AppLoading>\r\n      <AppLoadingContents>\r\n        <img \r\n        src=\"https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png\"\r\n        alt=\"\"\r\n        />\r\n\r\n        <Spinner name=\"ball-spin-fade-loader\" color=\"purple\" fadeIn=\"none\" />\r\n\r\n\r\n      </AppLoadingContents>\r\n    </AppLoading>\r\n  )\r\n}\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n  ):(\r\n    <>\r\n        <Header />\r\n        <AppBody>\r\n          <SideBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Chat />\r\n          </Route>\r\n        </Switch>\r\n\r\n        </AppBody>\r\n        \r\n        </>\r\n\r\n  )}\r\n        \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppLoading = styled.div`\r\ndisplay: grid;\r\nplace-items: center;\r\nheight: 100vh;\r\nwidth: 100%;\r\n\r\n`;\r\nconst AppLoadingContents = styled.div`\r\n\r\ntext-align: center;\r\npadding-bottom: 100px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n\r\n>img{\r\n  height: 100px;\r\n  padding: 20px;\r\n  margin-bottom: 40px;\r\n}`;\r\n\r\nconst AppBody = styled.div`\r\ndisplay: flex;\r\nheight: 100vh;\r\n`;","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}